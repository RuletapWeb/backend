version: "3"

services:
  strapi:
    image: strapi/strapi
    container_name: strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SENGRID_API_KEY: ${SENGRID_API_KEY}
      SENGRID_EMAIL_FROM: ${SENGRID_EMAIL_FROM}
      SENGRID_DEFAULT_REPLY: ${SENGRID_DEFAULT_REPLY}
      SENGRID_TEST_ACCOUNT: ${SENGRID_TEST_ACCOUNT}
      EMAIL_SUBJECT: ${EMAIL_SUBJECT}
      TOKEN_CHARS: ${TOKEN_CHARS}
      TOKEN_LENGTH: ${TOKEN_LENGTH}
      TAP_LOGIN_URL: ${TAP_LOGIN_URL}
      STRAPI_API_URL: ${STRAPI_API_URL}
    networks:
      - strapi-app-network
    volumes:
      - ./app:/srv/app

  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - strapi-app-network
    volumes:
      - strapidata:/data/db
  
  webserver:
    build:
      context: ../ruleta/.
      dockerfile: ../ruleta/Dockerfile
    container_name: webserver
    ports:
      - "80:80"
    restart: always
    networks:
      - strapi-app-network

networks:
  strapi-app-network:
    driver: bridge

volumes:
  strapidata:
